<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="17" passed="14" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-15T12:31:25 AEST" name="HotelAppSuite" finished-at="2025-08-15T12:34:32 AEST" duration-ms="187354">
    <groups>
    </groups>
    <test started-at="2025-08-15T12:31:25 AEST" name="Hotel Tests" finished-at="2025-08-15T12:34:32 AEST" duration-ms="187354">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:24 AEST" name="setupReport" finished-at="2025-08-15T12:31:25 AEST" duration-ms="566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:25 AEST" name="setUp" finished-at="2025-08-15T12:31:30 AEST" duration-ms="4699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateLoginPageTitle()[pri:1, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:30 AEST" name="validateLoginPageTitle" finished-at="2025-08-15T12:31:30 AEST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginPageTitle -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:30 AEST" name="tearDown" finished-at="2025-08-15T12:31:30 AEST" duration-ms="428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginPageTitle status=SUCCESS method=LoginTest.validateLoginPageTitle()[pri:1, instance:tests.LoginTest@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:30 AEST" name="setUp" finished-at="2025-08-15T12:31:33 AEST" duration-ms="3094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateLoginFieldsPresence()[pri:2, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:33 AEST" name="validateLoginFieldsPresence" finished-at="2025-08-15T12:31:34 AEST" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginFieldsPresence -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:34 AEST" name="tearDown" finished-at="2025-08-15T12:31:34 AEST" duration-ms="451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginFieldsPresence status=SUCCESS method=LoginTest.validateLoginFieldsPresence()[pri:2, instance:tests.LoginTest@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:34 AEST" name="setUp" finished-at="2025-08-15T12:31:38 AEST" duration-ms="3741" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateEmptyUsernameAndPassword()[pri:3, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:38 AEST" name="validateEmptyUsernameAndPassword" finished-at="2025-08-15T12:31:38 AEST" duration-ms="667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEmptyUsernameAndPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:38 AEST" name="tearDown" finished-at="2025-08-15T12:31:39 AEST" duration-ms="579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateEmptyUsernameAndPassword status=SUCCESS method=LoginTest.validateEmptyUsernameAndPassword()[pri:3, instance:tests.LoginTest@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:39 AEST" name="setUp" finished-at="2025-08-15T12:31:43 AEST" duration-ms="4255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateSuccessfulLogin()[pri:4, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:43 AEST" name="validateSuccessfulLogin" finished-at="2025-08-15T12:31:44 AEST" duration-ms="1177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSuccessfulLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:31:44 AEST" name="tearDown" finished-at="2025-08-15T12:31:45 AEST" duration-ms="375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSuccessfulLogin status=SUCCESS method=LoginTest.validateSuccessfulLogin()[pri:4, instance:tests.LoginTest@3bd82cf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownReport()[pri:0, instance:tests.LoginTest@3bd82cf5]" started-at="2025-08-15T12:34:32 AEST" name="tearDownReport" finished-at="2025-08-15T12:34:33 AEST" duration-ms="696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownReport -->
      </class> <!-- tests.LoginTest -->
      <class name="tests.CancelBookingTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.CancelBookingTest@41a2befb]" started-at="2025-08-15T12:33:20 AEST" name="setUp" finished-at="2025-08-15T12:33:23 AEST" duration-ms="3241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="login()[pri:1, instance:tests.CancelBookingTest@41a2befb]" started-at="2025-08-15T12:33:23 AEST" name="login" finished-at="2025-08-15T12:33:24 AEST" duration-ms="1031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CancelBookingTest@41a2befb]" started-at="2025-08-15T12:33:24 AEST" name="tearDown" finished-at="2025-08-15T12:33:25 AEST" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=login status=SUCCESS method=CancelBookingTest.login()[pri:1, instance:tests.CancelBookingTest@41a2befb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.CancelBookingTest@41a2befb]" started-at="2025-08-15T12:33:25 AEST" name="setUp" finished-at="2025-08-15T12:33:27 AEST" duration-ms="2402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="navigateToBookedItinerary()[pri:2, instance:tests.CancelBookingTest@41a2befb]" started-at="2025-08-15T12:33:27 AEST" name="navigateToBookedItinerary" finished-at="2025-08-15T12:33:47 AEST" duration-ms="19687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToBookedItinerary -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CancelBookingTest@41a2befb]" started-at="2025-08-15T12:33:47 AEST" name="tearDown" finished-at="2025-08-15T12:33:48 AEST" duration-ms="702" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigateToBookedItinerary status=SUCCESS method=CancelBookingTest.navigateToBookedItinerary()[pri:2, instance:tests.CancelBookingTest@41a2befb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.CancelBookingTest@41a2befb]" started-at="2025-08-15T12:33:48 AEST" name="setUp" finished-at="2025-08-15T12:33:51 AEST" duration-ms="3053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateCancellationMessageIsDisplayed()[pri:3, instance:tests.CancelBookingTest@41a2befb]" started-at="2025-08-15T12:33:51 AEST" name="validateCancellationMessageIsDisplayed" finished-at="2025-08-15T12:34:31 AEST" duration-ms="40734" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Cancellation message not displayed. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Cancellation message not displayed. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at tests.CancelBookingTest.validateCancellationMessageIsDisplayed(CancelBookingTest.java:99)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCancellationMessageIsDisplayed -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.CancelBookingTest@41a2befb]" started-at="2025-08-15T12:34:32 AEST" name="tearDown" finished-at="2025-08-15T12:34:32 AEST" duration-ms="573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCancellationMessageIsDisplayed status=FAILURE method=CancelBookingTest.validateCancellationMessageIsDisplayed()[pri:3, instance:tests.CancelBookingTest@41a2befb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.CancelBookingTest -->
      <class name="tests.SearchHotelTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:31:45 AEST" name="setUp" finished-at="2025-08-15T12:31:48 AEST" duration-ms="3184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateSearchPageTitle()[pri:1, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:31:48 AEST" name="validateSearchPageTitle" finished-at="2025-08-15T12:31:49 AEST" duration-ms="1301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchPageTitle -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:31:49 AEST" name="tearDown" finished-at="2025-08-15T12:31:50 AEST" duration-ms="637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchPageTitle status=SUCCESS method=SearchHotelTest.validateSearchPageTitle()[pri:1, instance:tests.SearchHotelTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:31:50 AEST" name="setUp" finished-at="2025-08-15T12:31:54 AEST" duration-ms="4118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateSearchFieldsPresence()[pri:2, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:31:54 AEST" name="validateSearchFieldsPresence" finished-at="2025-08-15T12:31:55 AEST" duration-ms="1143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchFieldsPresence -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:31:55 AEST" name="tearDown" finished-at="2025-08-15T12:31:56 AEST" duration-ms="669" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchFieldsPresence status=SUCCESS method=SearchHotelTest.validateSearchFieldsPresence()[pri:2, instance:tests.SearchHotelTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:31:56 AEST" name="setUp" finished-at="2025-08-15T12:32:01 AEST" duration-ms="5208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateDefaultDropdownSelection()[pri:3, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:32:01 AEST" name="validateDefaultDropdownSelection" finished-at="2025-08-15T12:32:02 AEST" duration-ms="1347" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#location"}
  (Session info: chrome=139.0.7258.67)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.20.0', revision: '866c76ca80'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9a07e8e60677b836a9838c04cfa6ff9d, findElement {using=id, value=location}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.67, chrome: {chromedriverVersion: 139.0.7258.68 (40ff94600b6e..., userDataDir: C:\Users\Vijaya\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53664}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53664/devtoo..., se:cdpVersion: 139.0.7258.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9a07e8e60677b836a9838c04cfa6ff9d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#location"}
  (Session info: chrome=139.0.7258.67)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.20.0', revision: '866c76ca80'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9a07e8e60677b836a9838c04cfa6ff9d, findElement {using=id, value=location}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 139.0.7258.67, chrome: {chromedriverVersion: 139.0.7258.68 (40ff94600b6e..., userDataDir: C:\Users\Vijaya\AppData\Loc...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53664}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53664/devtoo..., se:cdpVersion: 139.0.7258.67, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9a07e8e60677b836a9838c04cfa6ff9d
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at tests.SearchHotelTest.validateDefaultDropdownSelection(SearchHotelTest.java:52)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDefaultDropdownSelection -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:32:05 AEST" name="tearDown" finished-at="2025-08-15T12:32:05 AEST" duration-ms="637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDefaultDropdownSelection status=FAILURE method=SearchHotelTest.validateDefaultDropdownSelection()[pri:3, instance:tests.SearchHotelTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:32:05 AEST" name="setUp" finished-at="2025-08-15T12:32:08 AEST" duration-ms="2968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateSearchWithoutEnteringFields()[pri:4, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:32:08 AEST" name="validateSearchWithoutEnteringFields" finished-at="2025-08-15T12:32:10 AEST" duration-ms="1540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSearchWithoutEnteringFields -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:32:10 AEST" name="tearDown" finished-at="2025-08-15T12:32:10 AEST" duration-ms="777" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSearchWithoutEnteringFields status=SUCCESS method=SearchHotelTest.validateSearchWithoutEnteringFields()[pri:4, instance:tests.SearchHotelTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:32:10 AEST" name="setUp" finished-at="2025-08-15T12:32:13 AEST" duration-ms="2695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSearchHotel()[pri:5, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:32:13 AEST" name="testSearchHotel" finished-at="2025-08-15T12:32:16 AEST" duration-ms="3268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchHotel -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SearchHotelTest@24313fcc]" started-at="2025-08-15T12:32:16 AEST" name="tearDown" finished-at="2025-08-15T12:32:22 AEST" duration-ms="5156" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSearchHotel status=SUCCESS method=SearchHotelTest.testSearchHotel()[pri:5, instance:tests.SearchHotelTest@24313fcc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SearchHotelTest -->
      <class name="tests.BookHotelTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.BookHotelTest@77f1baf5]" started-at="2025-08-15T12:32:47 AEST" name="setUp" finished-at="2025-08-15T12:32:50 AEST" duration-ms="3028" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testBlankFormSubmission()[pri:1, instance:tests.BookHotelTest@77f1baf5]" started-at="2025-08-15T12:32:50 AEST" name="testBlankFormSubmission" finished-at="2025-08-15T12:32:55 AEST" duration-ms="4307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBlankFormSubmission -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.BookHotelTest@77f1baf5]" started-at="2025-08-15T12:32:55 AEST" name="tearDown" finished-at="2025-08-15T12:32:55 AEST" duration-ms="573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBlankFormSubmission status=SUCCESS method=BookHotelTest.testBlankFormSubmission()[pri:1, instance:tests.BookHotelTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.BookHotelTest@77f1baf5]" started-at="2025-08-15T12:32:55 AEST" name="setUp" finished-at="2025-08-15T12:32:59 AEST" duration-ms="3728" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInvalidCVV()[pri:2, instance:tests.BookHotelTest@77f1baf5]" started-at="2025-08-15T12:32:59 AEST" name="testInvalidCVV" finished-at="2025-08-15T12:33:05 AEST" duration-ms="5691" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CVV validation failed expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CVV validation failed expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at tests.BookHotelTest.testInvalidCVV(BookHotelTest.java:84)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidCVV -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.BookHotelTest@77f1baf5]" started-at="2025-08-15T12:33:05 AEST" name="tearDown" finished-at="2025-08-15T12:33:05 AEST" duration-ms="286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidCVV status=FAILURE method=BookHotelTest.testInvalidCVV()[pri:2, instance:tests.BookHotelTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.BookHotelTest@77f1baf5]" started-at="2025-08-15T12:33:05 AEST" name="setUp" finished-at="2025-08-15T12:33:10 AEST" duration-ms="4831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testFullBookingFlow()[pri:3, instance:tests.BookHotelTest@77f1baf5]" started-at="2025-08-15T12:33:10 AEST" name="testFullBookingFlow" finished-at="2025-08-15T12:33:20 AEST" duration-ms="9955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullBookingFlow -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.BookHotelTest@77f1baf5]" started-at="2025-08-15T12:33:20 AEST" name="tearDown" finished-at="2025-08-15T12:33:20 AEST" duration-ms="428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFullBookingFlow status=SUCCESS method=BookHotelTest.testFullBookingFlow()[pri:3, instance:tests.BookHotelTest@77f1baf5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.BookHotelTest -->
      <class name="tests.SelectHotelTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.SelectHotelTest@7d20d0b]" started-at="2025-08-15T12:32:22 AEST" name="setUp" finished-at="2025-08-15T12:32:36 AEST" duration-ms="14737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateHotelDetailsDisplayed()[pri:1, instance:tests.SelectHotelTest@7d20d0b]" started-at="2025-08-15T12:32:36 AEST" name="validateHotelDetailsDisplayed" finished-at="2025-08-15T12:32:40 AEST" duration-ms="3352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHotelDetailsDisplayed -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SelectHotelTest@7d20d0b]" started-at="2025-08-15T12:32:40 AEST" name="tearDown" finished-at="2025-08-15T12:32:40 AEST" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateHotelDetailsDisplayed status=SUCCESS method=SelectHotelTest.validateHotelDetailsDisplayed()[pri:1, instance:tests.SelectHotelTest@7d20d0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:tests.SelectHotelTest@7d20d0b]" started-at="2025-08-15T12:32:40 AEST" name="setUp" finished-at="2025-08-15T12:32:43 AEST" duration-ms="3237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="validateGSTCalculation()[pri:2, instance:tests.SelectHotelTest@7d20d0b]" started-at="2025-08-15T12:32:43 AEST" name="validateGSTCalculation" finished-at="2025-08-15T12:32:47 AEST" duration-ms="3451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGSTCalculation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.SelectHotelTest@7d20d0b]" started-at="2025-08-15T12:32:47 AEST" name="tearDown" finished-at="2025-08-15T12:32:47 AEST" duration-ms="399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateGSTCalculation status=SUCCESS method=SelectHotelTest.validateGSTCalculation()[pri:2, instance:tests.SelectHotelTest@7d20d0b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.SelectHotelTest -->
    </test> <!-- Hotel Tests -->
  </suite> <!-- HotelAppSuite -->
</testng-results>
